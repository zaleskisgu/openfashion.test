version: '3.8'

services:
  # MySQL база данных
  db:
    image: mysql:8.0
    container_name: laravel_db_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME:-laravel_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - laravel_network
    command: --default-authentication-plugin=mysql_native_password

  # PHP-FPM приложение
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: laravel_app_prod
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/production.ini:/usr/local/etc/php/conf.d/production.ini
    networks:
      - laravel_network
    depends_on:
      - db
    environment:
      - APP_ENV=production
      - APP_DEBUG=false

  # Nginx веб-сервер с SSL
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx-ssl.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
    networks:
      - laravel_network
    depends_on:
      - app

  # Redis для кэширования
  redis:
    image: redis:alpine
    container_name: laravel_redis_prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    command: redis-server --appendonly yes

  # Мониторинг с Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: laravel_prometheus
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - laravel_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  laravel_network:
    driver: bridge 